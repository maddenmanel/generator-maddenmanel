jd:
  ump:
    app-name: jdpay-test-center
    ump-key-prefix: com.jdd.jdpay.test.
  jmq:
    app: BalanceService
    user: BalanceService
    password: 2EB21929
    address: jmq-cluster.jd.local:80
    producer:
      retry-times: 3
    consumer:
      longPull: 5000
      pullInterval: 10000
      listeners[0]:
        listener: tradeFinishListener
        topic: tradeFinish
      listeners[1]:
        listener: updateOrderDetailListener
        topic: accountsucc
jdd:
  r2m:
    zk-provider-properties:
      app-name: test-timothy
      zk-connection-str: 172.25.46.201:2181,172.25.46.221:2181,172.25.46.241:2181
    caches:
      - cache-name: demo-cache1
        timeout: 100
      - cache-name: demo-cache2
        timeout: 100
  easyjob:
    server: http://172.25.4.107:80
    appId: splitaccount_clearing_center
    secret: 5f3b2c303a506c46d2228975ec46acd0

rpc:
  server:
    port: 22000
  registry:
    registry: jsf
    address: http://i.jsf.jd.com
  parameters:
    connectTimeout: 90000
  consumers[0]:
    id: consumer-userServiceProvider
    interfaceClazz: com.jdd.jdpay.demo.api.facade.UserServiceProvider
    alias: jsf2.0
    filter: contextConsumerFilter

spring:
  datasource:
    url: jdbc:mysql://172.25.4.206:3306/spiltaccount?characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong&nullNamePatternMatchesAll=true
    username: m_spiltaccount
    password: hFm0Kk
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM sys_user
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,log4j
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置 DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        # IP 黑名单，若白名单也存在，则优先使用
        deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: false
        # 登录用户名/密码
        login-username: root
        login-password: 123
        enabled: true

mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-statement-timeout: 10
  mapper-locations: classpath:mapper/*.xml

javamelody:
  # Initialization parameters for JavaMelody
  # See: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters
  init-parameters:
    # log http requests
    log: true

    # to exclude images, css, fonts and js urls from the monitoring:
    #url-exclude-pattern: (/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)

    # to add basic auth:
    #authorized-users: admin:pwd

    # to change the default storage directory:
    #storage-directory: /tmp/javamelody

    # to change the default "/monitoring" path
    #monitoring-path: /admin/performance
